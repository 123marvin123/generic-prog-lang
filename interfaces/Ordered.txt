namespace Ordered {
    fun isLess(p1: Ordered::Ordered, p2: Ordered::Ordered) -> Boolean::Boolean {
        description { "p(1) $<$ p(2) (is p(1) less than p(2)?)" }
    }

    fun isGreater(p1: Ordered::Ordered, p2: Ordered::Ordered) -> Boolean::Boolean {
        description { "p(1) $>$ p(2) (is p(1) greater than p(2)?)" }
    }

    fun isLessEqual(p1: Ordered::Ordered, p2: Ordered::Ordered) -> Boolean::Boolean {
        description { "p(1) $\\leq$ p(2) (is p(1) less than or equal to p(2)?)" }
        generic() { Boolean::or(isLess(p1, p2), Object::isEqual(p1, p2)) }
    }

    fun isGreaterEqual(p1: Ordered::Ordered, p2: Ordered::Ordered) -> Boolean::Boolean {
        description { "p(1) $\\geq$ p(2) (is p(1) greater than or equal to p(2)?)" }
        generic() { Boolean::or(isGreater(p1, p2), Object::isEqual(p1, p2)) }
    }
}
