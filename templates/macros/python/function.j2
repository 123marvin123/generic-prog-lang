{% macro FunctionDefinition(def) %}

{% set reqs = function_requirements(def.full_name) %}
{% set impls = function_generic_impls(def.full_name) %}
{% set Name_ = sanitize(def.name) | capitalize %}

class Spec{{ Name_ }}:

    GENERIC_IMPLS = [
        {% for impl in impls %}
        lambda {% for p in def.params -%}{{ sanitize(p.name) }}{{ ', ' if not loop.last }}{%- endfor -%}: {{ impl }}{{ ', ' if not loop.last }}
        {% endfor %}
    ]

    NAME = "{{ sanitize(def.name) }}"
    pass

def {{ sanitize(def.name) }}({%- for p in def.params -%}{{ sanitize(p.name) }}{{ ', ' if not loop.last }}{%- endfor -%}):
    return Exp()

{% endmacro %}