{# filepath: /Users/haschker/Arbeitsbereich/generic-prog-lang/templates/macros/python/concept.j2 #}
{% macro ConceptDefinition(def) %}
{# --- Imports --- #}

{# TODO: Import base concepts based on def.bases #}
{% for base in def.bases %}
from {{ python_import_path(base) }} import Concept{{ sanitize(base.name) }}
{% endfor %}

from .concept import Concept

class Concept{{ sanitize(def.name) }}(Concept):

    _instance = None
    BASES = [
{% for base in def.bases %}
        Concept{{ sanitize(base.name) }}{% if not loop.last %},{% endif %}
{% endfor %}
    ]
    
    def __init__(self):
        super().__init__("{{ sanitize(def.name) }}", """{{ def.description | replace('"', '\\"') }}""")
    
    @classmethod
    def instance(cls):
        if cls._instance is None:
            cls._instance = cls()
        return cls._instance

{% endmacro %}