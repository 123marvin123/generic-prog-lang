---
name: CI

on:
  push:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  lint-hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run Hadolint
        uses: brpaz/hadolint-action@v1.5.0
        with:
          dockerfile: "./Dockerfile"

  lint-json:
    name: JSON Lint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run JQ
        run: |
          shopt -s globstar
          cat **/*.json | jq '.'

  lint-markdown:
    name: MarkdownLint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run mdl
        uses: actionshub/markdownlint@v3.1.4

  lint-shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run Shellcheck
        uses: ludeeus/action-shellcheck@2.0.0
        env:
          SHELLCHECK_OPTS: -s bash

  lint-yamllint:
    name: YAMLLint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run YAMLLint
        uses: frenck/action-yamllint@v1.5

  lint-prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run Prettier
        uses: creyD/prettier_action@v4.3
        with:
          prettier_options: --write **/*.{json,js,md,yaml}
  build-docker:
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: 🚀 Build
        uses: docker/build-push-action@v6.15.0
        with:
          push: true
          file: Dockerfile
          cache-from: type=gha,scope=${{ github.repository }}
          cache-to: type=gha,mode=max,scope=${{ github.repository }}

  test:
    name: Test
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: ⬇️ Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/
      - name: 🧪 Run tests
        run: |
          docker run --rm -v $(pwd):/app -w /app/build ${{ github.repository }} ctest --output-on-failure
